//******************CONSTANTS***************************

//****************FORMS CONSTANTS

export const initialIndividualRegisterFormValues = {
    firstName: "",
    lastName: "",
    email: "",
    password: "",
};
export const initialOrganizationRegisterFormValues = {
    email: "",
    password: "",
};

export const individualRegisterFormGroupData = [
    {
        label: "First Name",
        type: "text",
        name: "firstName",
        id: "firstName",
        placeholder: "i.e. Davon",
        value: (formValues) => formValues.firstName,
        error: (errors) => errors.firstName,
    },
    {
        label: "Last Name",
        type: "text",
        name: "lastName",
        id: "lastName",
        placeholder: "i.e. Lean",
        value: (formValues) => formValues.lastName,
        error: (errors) => errors.lastName,
    },
    {
        label: "Email",
        type: "email",
        name: "email",
        id: "email",
        placeholder: "i.e. davon@mail.com",
        value: (formValues) => formValues.email,
        error: (errors) => errors.email,
    },
    {
        label: "Password",
        type: "password",
        name: "password",
        id: "password",
        placeholder: "********",
        value: (formValues) => formValues.password,
        error: (errors) => errors.password,
    },
];

export const organizationRegisterFormGroupData = [
    {
        label: "Email",
        type: "email",
        name: "email",
        id: "email",
        placeholder: "i.e. davon@mail.com",
        value: (formValues) => formValues.email,
        error: (errors) => errors.email,
    },
    {
        label: "Password",
        type: "password",
        name: "password",
        id: "password",
        placeholder: "********",
        value: (formValues) => formValues.password,
        error: (errors) => errors.password,
    },
];

// PROFILES FORM

export const initialModelProfileFormValues = {
    birthDate: "2000-01-01",
    gender: "",
    nationality: "",
    skinToneEnum: "",
    hairColorEnum: "",
    eyeColorEnum: "",
    bust: "",
    hips: "",
    waist: "",
    dressSize: "",
    shoeSize: "",
    weight: "",
    height: "",
};

export const modelProfileFormGroupData = [
    {
        label: "BirthDate",
        type: "date",
        name: "birthDate",
        id: "birthDate",
        value: (formValues) => formValues.birthDate,
        // error: (errors) => errors.birthDate,
    },
    {
        label: "Gender",
        type: "select",
        name: "gender",
        id: "gender",
        value: (formValues) => formValues.gender,
        // error: (errors) => errors.gender,
    },
    {
        label: "Nationality",
        type: "select",
        name: "nationality",
        id: "nationality",
        value: (formValues) => formValues.nationality,
        // error: (errors) => errors.lense,
    },
    {
        label: "Skin Tone",
        type: "select",
        name: "skinToneEnum",
        id: "skinToneEnum",
        value: (formValues) => formValues.skinToneEnum,
        // error: (errors) => errors.skinToneEnum,
    },
    {
        label: "Hair Color",
        type: "select",
        name: "hairColorEnum",
        id: "hairColorEnum",
        value: (formValues) => formValues.hairColorEnum,
        // error: (errors) => errors.hairColorEnum,
    },
    {
        label: "Eye Color",
        type: "select",
        name: "eyeColorEnum",
        id: "eyeColorEnum",
        value: (formValues) => formValues.eyeColorEnum,
        // error: (errors) => errors.eyeColorEnum,
    },
    {
        label: "Bust",
        type: "select",
        name: "bust",
        id: "bust",
        value: (formValues) => formValues.bust,
        // error: (errors) => errors.bust,
    },
    {
        label: "Hips",
        type: "select",
        name: "hips",
        id: "hips",
        value: (formValues) => formValues.hips,
        // error: (errors) => errors.hips,
    },
    {
        label: "Waist",
        type: "select",
        name: "waist",
        id: "waist",
        value: (formValues) => formValues.waist,
        // error: (errors) => errors.waist,
    },
    {
        label: "Dress Size",
        type: "select",
        name: "dressSize",
        id: "dressSize",
        value: (formValues) => formValues.dressSize,
        className: "col-span-3",
        // error: (errors) => errors.dressSize,
    },
    {
        label: "Shoe Size",
        type: "select",
        name: "shoeSize",
        id: "shoeSize",
        value: (formValues) => formValues.shoeSize,
        className: "col-span-3",
        // error: (errors) => errors.shoeSize",
    },
    {
        label: "Weight",
        type: "select",
        name: "weight",
        id: "weight",
        value: (formValues) => formValues.weight,
        className: "col-span-3",
        // error: (errors) => errors.weight",
    },
    {
        label: "Height",
        type: "select",
        name: "height",
        id: "height",
        value: (formValues) => formValues.height,
        className: "col-span-3",
        // error: (errors) => errors.height",
    },
];

export const initialVideographerProfileFormValues = {
    camera: "",
    lightning: "",
    lense: "",
    stabilizer: "",
};

export const videographerProfileFormGroupData = [
    {
        label: "Camera owned / used",
        type: "text",
        name: "camera",
        id: "camera",
        placeholder: "i.e. Nikon",
        value: (formValues) => formValues.camera,
        // error: (errors) => errors.camera,
    },
    {
        label: "lightning owned / used",
        type: "text",
        name: "lightning",
        id: "lightning",
        placeholder: "i.e. Nikon",
        value: (formValues) => formValues.lightning,
        // error: (errors) => errors.lightning,
    },
    {
        label: "Lens Used",
        type: "text",
        name: "lense",
        id: "lense",
        placeholder: "i.e. Nikon",
        value: (formValues) => formValues.lense,
        // error: (errors) => errors.lense,
    },
    {
        label: "Stabilizer / gimbal availability",
        type: "select",
        name: "stabilizer",
        id: "stabilizer",
        placeholder: "i.e. Nikon",
        value: (formValues) => formValues.stabilizer,
        // error: (errors) => errors.stabilizer,
    },
];

export const initialPhotographerProfileFormValues = {
    camera: "",
    lightning: "",
    lense: "",
};

export const photographerProfileFormGroupData = [
    {
        label: "Camera owned / used",
        type: "text",
        name: "camera",
        id: "camera",
        placeholder: "i.e. Nikon",
        value: (formValues) => formValues.camera,
        // error: (errors) => errors.camera,
    },
    {
        label: "lightning owned / used",
        type: "text",
        name: "lightning",
        id: "lightning",
        placeholder: "i.e. Nikon",
        value: (formValues) => formValues.lightning,
        // error: (errors) => errors.lighting,
    },
    {
        label: "Lens Used",
        type: "text",
        name: "lense",
        id: "lense",
        placeholder: "i.e. Nikon",
        value: (formValues) => formValues.lense,
        // error: (errors) => errors.lense,
    },
];

export const initialEditorProfileFormValues = {
    editingSoftware: "",
    colorGrading: false,
    soundEditing: false,
    visualEffects: false,
    motionGraphics: false,
};

export const initialMusicianProfileFormValues = {
    category: [],
    majorProjects: "",
    preferWorkingWith: [],
    experienceHandlingHighProfileClients: "",
    wonAwards: "",
    portfolioUrl: "",
};
export const initialFashionProfileFormValues = {
    category: [],
    publications: "",
    // yearsOfExperience: 1,
    workedWithCelebrities: "",
    formalTrainingOrCertifications: "",
    portfolio: "",
};
export const initialArtistProfileFormValues = {
    category: [],
    publications: "",
    previousClients: "",
    expertise: [], // max 3
    portfolio: "",
    previousWork: [],
};
export const initialAthleteProfileFormValues = {
    category: [],
    // yearsofExperience: 1,
    AchievementsOrTitles: [],
    affiliated: "",
    portfolio: "",
    bodyPictures: [],
    trophiePictures: [],
};
export const initialBeautyProfileFormValues = {
    expertise: [],
    hasHighLevelExperience: "",
    protofolio: "",
    preferredBrands: [],
    hasFormalTraining: "",
};
export const initialTourismProfileFormValues = {
    specializations: [],
    experienceManagingTravelLogistics: "",
    // yearsofExperience: 1,
    currentOrMostRecentEmployer: "",
    license: "",
    certificates: [],
    otherLanguage: "",
};

export const initialOrgProfileFormValues = {
    bio: "",
    name: "",
    location: "",
    instagram: "",
    tiktok: "",
    website: "",
    phone: "",
};

export const OrgProfileFormGroupData = [
    {
        label: "Bio",
        type: "text",
        name: "bio",
        id: "bio",
        placeholder: "i.e. Devion",
        className: "col-span-2",
        value: (formValues) => formValues.bio,
        // error: (errors) => errors.bio,
    },
    {
        label: "Organization Name",
        type: "text",
        name: "name",
        id: "name",
        placeholder: "i.e. Devion",
        value: (formValues) => formValues.name,
        // error: (errors) => errors.name,
    },
    {
        label: "Location",
        type: "select",
        name: "location",
        id: "location",
        placeholder: "i.e. Devion",
        value: (formValues) => formValues.location,
        // error: (errors) => errors.location,
    },
    {
        label: "Instagram",
        type: "text",
        name: "instagram",
        id: "instagram",
        placeholder: "i.e. Devion",
        value: (formValues) => formValues.instagram,
        // error: (errors) => errors.instagram,
    },
    {
        label: "Tiktok",
        type: "text",
        name: "tiktok",
        id: "tiktok",
        placeholder: "i.e. Devion",
        value: (formValues) => formValues.tiktok,
        // error: (errors) => errors.tiktok,
    },
    {
        label: "Website",
        type: "text",
        name: "website",
        id: "website",
        placeholder: "i.e. Devion",
        value: (formValues) => formValues.website,
        // error: (errors) => errors.website,
    },
    {
        label: "Phone Number",
        type: "text",
        name: "phone",
        id: "phone",
        placeholder: "i.e. Devion",
        value: (formValues) => formValues.phone,
        // error: (errors) => errors.phone,
    },
];

export const initialModelImagesValues = {
    profile: null,
    portfolio: null,
    headshot: null,
    fullBody: null,
};
export const initialRestImagesValues = {
    portfolio1: null,
    portfolio2: null,
    profile: null,
    reel: null,
};

export const initialMusicianImagesValues = {
    profile: null,
};
export const initialFashionImagesValues = {
    profile: null,
    certificateProof: null,
    previousWork1: null,
    previousWork2: null,
};

export const initialArtistImagesValues = {
    profile: null,
    previousWork1: null,
    previousWork2: null,
};
export const initialAthleteImagesValues = {
    profile: null,
    fullbody: null,
    trophies: null,
};

export const initialBeatyImagesValues = {
    profile: null,
    certificateProof: null,
    previousWork1: null,
    previousWork2: null,
};
export const initialTourismImagesValues = {
    profile: null,
    certificateProof: null,
};

// EXPERIENCE FORM
export const initialExperienceFormValues = {
    bio: "",
    socialAccount: "",
    yearsOfExperience: "",
    availableForTravel: "",
    legallyWorking: "",
    holdingBachelors: "",
};

export const ExperienceFormGroupData = [
    {
        label: "Bio:",
        type: "text",
        name: "bio",
        id: "bio",
        placeholder: "Type here",
        value: (formValues) => formValues.bio,
        // error: (errors) => errors.bio,
    },
    {
        label: "Link Your Most Followed Social Account:",
        type: "text",
        name: "socialAccount",
        id: "socialAccount",
        placeholder: "Type here",
        value: (formValues) => formValues.socialAccount,
        // error: (errors) => errors.socialAccount,
    },
    {
        label: "How many years of experience do you have?",
        type: "number",
        name: "yearsOfExperience",
        id: "yearsOfExperience",
        placeholder: "Type here",
        value: (formValues) => formValues.yearsOfExperience,
        // error: (errors) => errors.yearsOfExperience,
    },
    {
        label: "Are you available for travel for shoots?",
        type: "select",
        name: "availableForTravel",
        id: "availableForTravel",
        value: (formValues) => formValues.availableForTravel,
        // error: (errors) => errors.availableForTravel,
    },
    {
        label: "Are you legally eligible to work in your location?",
        type: "select",
        name: "legallyWorking",
        id: "legallyWorking",
        value: (formValues) => formValues.legallyWorking,
        // error: (errors) => errors.legallyWorking,
    },
    {
        label: "Do you have tattoos?",
        type: "select",
        name: "holdingBachelors",
        id: "holdingBachelors",
        value: (formValues) => formValues.holdingBachelors,
        // error: (errors) => errors.holdingBachelors,
    },
];

// JOB POST FORM

export const JobPostFormGroupData = [
    {
        label: "Job Title:",
        type: "text",
        name: "jobTitle",
        id: "jobTitle",
        placeholder: "Type here",
        className: "col-span-2",
        value: (formValues) => formValues.jobTitle,
        // error: (errors) => errors.jobTitle,
    },
    {
        label: "Job Category:",
        type: "text",
        name: "jobCategory",
        id: "jobCategory",
        placeholder: "Type here",
        className: "col-span-2",
        value: (formValues) => formValues.jobCategory,
        // error: (errors) => errors.jobCategory,
    },
    {
        label: "Experience Needed:",
        type: "text",
        name: "experienceNeeded",
        id: "experienceNeeded",
        placeholder: "Type here",
        className: "col-span-2",
        value: (formValues) => formValues.experienceNeeded,
        // error: (errors) => errors.experienceNeeded,
    },
    {
        label: "Career Level:",
        type: "text",
        name: "careerLevel",
        id: "careerLevel",
        placeholder: "Type here",
        className: "col-span-2",
        value: (formValues) => formValues.careerLevel,
        // error: (errors) => errors.careerLevel,
    },
    {
        label: "Job Description:",
        type: "text",
        name: "jobDescription",
        id: "jobDescription",
        placeholder: "Type here",
        value: (formValues) => formValues.jobDescription,
        // error: (errors) => errors.jobDescription,
    },
    {
        label: "Job Requirements:",
        type: "text",
        name: "jobRequirements",
        id: "jobRequirements",
        placeholder: "Type here",
        value: (formValues) => formValues.jobRequirements,
        // error: (errors) => errors.jobRequirements,
    },
];
//************************************************* */

//********ENUMS********

// UserVerificationCodeUseCaseEnum

export const UserVerificationCodeUseCaseEnum = {
    PASSWORD_RESET: "PASSWORD_RESET",
    ACCOUNT_VERIFICATION: "ACCOUNT_VERIFICATION",
};

// UserRoleEnum
export const UserRoleEnum = {
    ADMIN: "ADMIN",
    INDIVIDUAL: "INDIVIDUAL",
    ORGANIZATION: "ORGANIZATION",
};

// IndividualRoleEnum
export const IndividualRoleEnum = {
    MODEL: "MODEL",
    EDITOR: "EDITOR",
    VIDEOGRAPHER: "VIDEOGRAPHER",
    PHOTOGRAPHER: "PHOTOGRAPHER",
};

// IndividualGenderEnum
const IndividualGenderEnum = {
    id: "gender",
    enums: {
        MALE: "MALE",
        OTHER: "OTHER",
        FEMALE: "FEMALE",
    },
};

// SkinToneEnum
export const SkinToneEnum = {
    id: "skinToneEnum",
    enums: {
        LIGHT: "LIGHT",
        MEDIUM: "MEDIUM",
        DARK: "DARK",
    },
};

// HairColorEnum
export const HairColorEnum = {
    id: "hairColorEnum",
    enums: {
        BLACK: "BLACK",
        BROWN: "BROWN",
        BLONDE: "BLONDE",
        RED: "RED",
    },
};

// EyeColorEnum
export const EyeColorEnum = {
    id: "eyeColorEnum",
    enums: {
        BROWN: "BROWN",
        BLUE: "BLUE",
        GREEN: "GREEN",
        HAZEL: "HAZEL",
    },
};

// BustSizeEnum
export const BustSizeEnum = {
    id: "bust",
    enums: {
        60: "60 cm",
        61: "61 cm",
        62: "62 cm",
        63: "63 cm",
        64: "64 cm",
        65: "65 cm",
        66: "66 cm",
        67: "67 cm",
        68: "68 cm",
        69: "69 cm",
        70: "70 cm",
        71: "71 cm",
        72: "72 cm",
        73: "73 cm",
        74: "74 cm",
        75: "75 cm",
        76: "76 cm",
        77: "77 cm",
        78: "78 cm",
        79: "79 cm",
        80: "80 cm",
        81: "81 cm",
        82: "82 cm",
        83: "83 cm",
        84: "84 cm",
        85: "85 cm",
        86: "86 cm",
        87: "87 cm",
        88: "88 cm",
        89: "89 cm",
        90: "90 cm",
    },
};

// HipSizeEnum
export const HipSizeEnum = {
    id: "hips",
    enums: {
        50: "50 cm",
        51: "51 cm",
        52: "52 cm",
        53: "53 cm",
        54: "54 cm",
        55: "55 cm",
        56: "56 cm",
        57: "57 cm",
        58: "58 cm",
        59: "59 cm",
        60: "60 cm",
        61: "61 cm",
        62: "62 cm",
        63: "63 cm",
        64: "64 cm",
        65: "65 cm",
        66: "66 cm",
        67: "67 cm",
        68: "68 cm",
        69: "69 cm",
        70: "70 cm",
        71: "71 cm",
        72: "72 cm",
        73: "73 cm",
        74: "74 cm",
        75: "75 cm",
        76: "76 cm",
        77: "77 cm",
        78: "78 cm",
        79: "79 cm",
        80: "80 cm",
        81: "81 cm",
        82: "82 cm",
        83: "83 cm",
        84: "84 cm",
        85: "85 cm",
        86: "86 cm",
        87: "87 cm",
        88: "88 cm",
        89: "89 cm",
        90: "90 cm",
    },
};

// WaistSizeEnum
export const WaistSizeEnum = {
    id: "waist",
    enums: {
        50: "50 cm",
        51: "51 cm",
        52: "52 cm",
        53: "53 cm",
        54: "54 cm",
        55: "55 cm",
        56: "56 cm",
        57: "57 cm",
        58: "58 cm",
        59: "59 cm",
        60: "60 cm",
        61: "61 cm",
        62: "62 cm",
        63: "63 cm",
        64: "64 cm",
        65: "65 cm",
        66: "66 cm",
        67: "67 cm",
        68: "68 cm",
        69: "69 cm",
        70: "70 cm",
        71: "71 cm",
        72: "72 cm",
        73: "73 cm",
        74: "74 cm",
        75: "75 cm",
        76: "76 cm",
        77: "77 cm",
        78: "78 cm",
        79: "79 cm",
        80: "80 cm",
        81: "81 cm",
        82: "82 cm",
        83: "83 cm",
        84: "84 cm",
        85: "85 cm",
        86: "86 cm",
        87: "87 cm",
        88: "88 cm",
        89: "89 cm",
        90: "90 cm",
    },
};

// DressSizeEnum
export const DressSizeEnum = {
    id: "dressSize",
    enums: {
        10: "10 cm",
        11: "11 cm",
        12: "12 cm",
        13: "13 cm",
        14: "14 cm",
        15: "15 cm",
        16: "16 cm",
        17: "17 cm",
        18: "18 cm",
        19: "19 cm",
        20: "20 cm",
    },
};

// ShoeSizeEnum
export const ShoeSizeEnum = {
    id: "shoeSize",
    enums: {
        20: "20 cm",
        21: "21 cm",
        22: "22 cm",
        23: "23 cm",
        24: "24 cm",
        25: "25 cm",
        26: "26 cm",
        27: "27 cm",
        28: "28 cm",
        29: "29 cm",
        30: "30 cm",
        31: "31 cm",
        32: "32 cm",
        33: "33 cm",
        34: "34 cm",
        35: "35 cm",
        36: "36 cm",
        37: "37 cm",
        38: "38 cm",
        39: "39 cm",
        40: "40 cm",
        41: "41 cm",
        42: "42 cm",
        43: "43 cm",
        44: "44 cm",
        45: "45 cm",
        46: "46 cm",
        47: "47 cm",
        48: "48 cm",
        49: "49 cm",
        50: "50 cm",
    },
};

//HieghtEnum
export const HeightEnum = {
    id: "height",
    enums: {
        140: "140 cm",
        141: "141 cm",
        142: "142 cm",
        143: "143 cm",
        144: "144 cm",
        145: "145 cm",
        146: "146 cm",
        147: "147 cm",
        148: "148 cm",
        149: "149 cm",
        150: "150 cm",
        151: "151 cm",
        152: "152 cm",
        153: "153 cm",
        154: "154 cm",
        155: "155 cm",
        156: "156 cm",
        157: "157 cm",
        158: "158 cm",
        159: "159 cm",
        160: "160 cm",
        161: "161 cm",
        162: "162 cm",
        163: "163 cm",
        164: "164 cm",
        165: "165 cm",
        166: "166 cm",
        167: "167 cm",
        168: "168 cm",
        169: "169 cm",
        170: "170 cm",
        171: "171 cm",
        172: "172 cm",
        173: "173 cm",
        174: "174 cm",
        175: "175 cm",
        176: "176 cm",
        177: "177 cm",
        178: "178 cm",
        179: "179 cm",
        180: "180 cm",
        181: "181 cm",
        182: "182 cm",
        183: "183 cm",
        184: "184 cm",
        185: "185 cm",
        186: "186 cm",
        187: "187 cm",
        188: "188 cm",
        189: "189 cm",
        190: "190 cm",
        191: "191 cm",
        192: "192 cm",
        193: "193 cm",
        194: "194 cm",
        195: "195 cm",
        196: "196 cm",
        197: "197 cm",
        198: "198 cm",
        199: "199 cm",
        200: "200 cm",
    },
};

//WeightEnum
export const WeightEnum = {
    id: "weight",
    enums: {
        60: "60 kg",
        61: "61 kg",
        62: "62 kg",
        63: "63 kg",
        64: "64 kg",
        65: "65 kg",
        66: "66 kg",
        67: "67 kg",
        68: "68 kg",
        69: "69 kg",
        70: "70 kg",
        71: "71 kg",
        72: "72 kg",
        73: "73 kg",
        74: "74 kg",
        75: "75 kg",
        76: "76 kg",
        77: "77 kg",
        78: "78 kg",
        79: "79 kg",
        80: "80 kg",
        81: "81 kg",
        82: "82 kg",
        83: "83 kg",
        84: "84 kg",
        85: "85 kg",
        86: "86 kg",
        87: "87 kg",
        88: "88 kg",
        89: "89 kg",
        90: "90 kg",
        91: "91 kg",
        92: "92 kg",
        93: "93 kg",
        94: "94 kg",
        95: "95 kg",
        96: "96 kg",
        97: "97 kg",
        98: "98 kg",
        99: "99 kg",
        100: "100 kg",
        101: "101 kg",
        102: "102 kg",
        103: "103 kg",
        104: "104 kg",
        105: "105 kg",
        106: "106 kg",
        107: "107 kg",
        108: "108 kg",
        109: "109 kg",
        110: "110 kg",
        111: "111 kg",
        112: "112 kg",
        113: "113 kg",
        114: "114 kg",
        115: "115 kg",
        116: "116 kg",
        117: "117 kg",
        118: "118 kg",
        119: "119 kg",
        120: "120 kg",
        121: "121 kg",
        122: "122 kg",
        123: "123 kg",
        124: "124 kg",
        125: "125 kg",
        126: "126 kg",
        127: "127 kg",
        128: "128 kg",
        129: "129 kg",
        130: "130 kg",
        131: "131 kg",
        132: "132 kg",
        133: "133 kg",
        134: "134 kg",
        135: "135 kg",
        136: "136 kg",
        137: "137 kg",
        138: "138 kg",
        139: "139 kg",
        140: "140 kg",
        141: "141 kg",
        142: "142 kg",
        143: "143 kg",
        144: "144 kg",
        145: "145 kg",
        146: "146 kg",
        147: "147 kg",
        148: "148 kg",
        149: "149 kg",
        150: "150 kg",
    },
};

// CountryEnum (abbreviated example for brevity)
export const CountryEnum = {
    id: "nationality",
    enums: {
        Afghanistan: "AF",
        AlandIslands: "AX",
        Albania: "AL",
        Algeria: "DZ",
        AmericanSamoa: "AS",
        Andorra: "AD",
        Angola: "AO",
        Anguilla: "AI",
        Antarctica: "AQ",
        AntiguaAndBarbuda: "AG",
        Argentina: "AR",
        Armenia: "AM",
        Aruba: "AW",
        Australia: "AU",
        Austria: "AT",
        Azerbaijan: "AZ",
        Bahamas: "BS",
        Bahrain: "BH",
        Bangladesh: "BD",
        Barbados: "BB",
        Belarus: "BY",
        Belgium: "BE",
        Belize: "BZ",
        Benin: "BJ",
        Bermuda: "BM",
        Bhutan: "BT",
        Bolivia: "BO",
        BonaireSintEustatiusSaba: "BQ",
        BosniaAndHerzegovina: "BA",
        Botswana: "BW",
        BouvetIsland: "BV",
        Brazil: "BR",
        BritishIndianOceanTerritory: "IO",
        BruneiDarussalam: "BN",
        Bulgaria: "BG",
        BurkinaFaso: "BF",
        Burundi: "BI",
        Cambodia: "KH",
        Cameroon: "CM",
        Canada: "CA",
        CapeVerde: "CV",
        CaymanIslands: "KY",
        CentralAfricanRepublic: "CF",
        Chad: "TD",
        Chile: "CL",
        China: "CN",
        ChristmasIsland: "CX",
        CocosKeelingIslands: "CC",
        Colombia: "CO",
        Comoros: "KM",
        Congo: "CG",
        CongoDemocraticRepublic: "CD",
        CookIslands: "CK",
        CostaRica: "CR",
        CoteDIvoire: "CI",
        Croatia: "HR",
        Cuba: "CU",
        "CuraÃ§ao": "CW",
        Cyprus: "CY",
        CzechRepublic: "CZ",
        Denmark: "DK",
        Djibouti: "DJ",
        Dominica: "DM",
        DominicanRepublic: "DO",
        Ecuador: "EC",
        Egypt: "EG",
        ElSalvador: "SV",
        EquatorialGuinea: "GQ",
        Eritrea: "ER",
        Estonia: "EE",
        Ethiopia: "ET",
        FalklandIslands: "FK",
        FaroeIslands: "FO",
        Fiji: "FJ",
        Finland: "FI",
        France: "FR",
        FrenchGuiana: "GF",
        FrenchPolynesia: "PF",
        FrenchSouthernTerritories: "TF",
        Gabon: "GA",
        Gambia: "GM",
        Georgia: "GE",
        Germany: "DE",
        Ghana: "GH",
        Gibraltar: "GI",
        Greece: "GR",
        Greenland: "GL",
        Grenada: "GD",
        Guadeloupe: "GP",
        Guam: "GU",
        Guatemala: "GT",
        Guernsey: "GG",
        Guinea: "GN",
        GuineaBissau: "GW",
        Guyana: "GY",
        Haiti: "HT",
        HeardIslandMcdonaldIslands: "HM",
        HolySeeVaticanCityState: "VA",
        Honduras: "HN",
        HongKong: "HK",
        Hungary: "HU",
        Iceland: "IS",
        India: "IN",
        Indonesia: "ID",
        Iran: "IR",
        Iraq: "IQ",
        Ireland: "IE",
        IsleOfMan: "IM",
        Israel: "IL",
        Italy: "IT",
        Jamaica: "JM",
        Japan: "JP",
        Jersey: "JE",
        Jordan: "JO",
        Kazakhstan: "KZ",
        Kenya: "KE",
        Kiribati: "KI",
        Korea: "KR",
        KoreaDemocraticPeoplesRepublic: "KP",
        Kuwait: "KW",
        Kyrgyzstan: "KG",
        LaoPeoplesDemocraticRepublic: "LA",
        Latvia: "LV",
        Lebanon: "LB",
        Lesotho: "LS",
        Liberia: "LR",
        LibyanArabJamahiriya: "LY",
        Liechtenstein: "LI",
        Lithuania: "LT",
        Luxembourg: "LU",
        Macao: "MO",
        Macedonia: "MK",
        Madagascar: "MG",
        Malawi: "MW",
        Malaysia: "MY",
        Maldives: "MV",
        Mali: "ML",
        Malta: "MT",
        MarshallIslands: "MH",
        Martinique: "MQ",
        Mauritania: "MR",
        Mauritius: "MU",
        Mayotte: "YT",
        Mexico: "MX",
        Micronesia: "FM",
        Moldova: "MD",
        Monaco: "MC",
        Mongolia: "MN",
        Montenegro: "ME",
        Montserrat: "MS",
        Morocco: "MA",
        Mozambique: "MZ",
        Myanmar: "MM",
        Namibia: "NA",
        Nauru: "NR",
        Nepal: "NP",
        Netherlands: "NL",
        NewCaledonia: "NC",
        NewZealand: "NZ",
        Nicaragua: "NI",
        Niger: "NE",
        Nigeria: "NG",
        Niue: "NU",
        NorfolkIsland: "NF",
        NorthernMarianaIslands: "MP",
        Norway: "NO",
        Oman: "OM",
        Pakistan: "PK",
        Palau: "PW",
        PalestinianTerritory: "PS",
        Panama: "PA",
        PapuaNewGuinea: "PG",
        Paraguay: "PY",
        Peru: "PE",
        Philippines: "PH",
        Pitcairn: "PN",
        Poland: "PL",
        Portugal: "PT",
        PuertoRico: "PR",
        Qatar: "QA",
        Reunion: "RE",
        Romania: "RO",
        RussianFederation: "RU",
        Rwanda: "RW",
        SaintBarthelemy: "BL",
        SaintHelena: "SH",
        SaintKittsAndNevis: "KN",
        SaintLucia: "LC",
        SaintMartin: "MF",
        SaintPierreAndMiquelon: "PM",
        SaintVincentAndGrenadines: "VC",
        Samoa: "WS",
        SanMarino: "SM",
        SaoTomeAndPrincipe: "ST",
        SaudiArabia: "SA",
        Senegal: "SN",
        Serbia: "RS",
        Seychelles: "SC",
        SierraLeone: "SL",
        Singapore: "SG",
        SintMaarten: "SX",
        Slovakia: "SK",
        Slovenia: "SI",
        SolomonIslands: "SB",
        Somalia: "SO",
        SouthAfrica: "ZA",
        SouthGeorgiaAndSandwichIsl: "GS",
        SouthSudan: "SS",
        Spain: "ES",
        SriLanka: "LK",
        Sudan: "SD",
        Suriname: "SR",
        SvalbardAndJanMayen: "SJ",
        Swaziland: "SZ",
        Sweden: "SE",
        Switzerland: "CH",
        SyrianArabRepublic: "SY",
        Taiwan: "TW",
        Tajikistan: "TJ",
        Tanzania: "TZ",
        Thailand: "TH",
        TimorLeste: "TL",
        Togo: "TG",
        Tokelau: "TK",
        Tonga: "TO",
        TrinidadAndTobago: "TT",
        Tunisia: "TN",
        Turkey: "TR",
        Turkmenistan: "TM",
        TurksAndCaicosIslands: "TC",
        Tuvalu: "TV",
        Uganda: "UG",
        Ukraine: "UA",
        UnitedArabEmirates: "AE",
        UnitedKingdom: "GB",
        UnitedStates: "US",
        UnitedStatesOutlyingIslands: "UM",
        Uruguay: "UY",
        Uzbekistan: "UZ",
        Vanuatu: "VU",
        Venezuela: "VE",
        Vietnam: "VN",
        VirginIslandsBritish: "VG",
        VirginIslandsUS: "VI",
        WallisAndFutuna: "WF",
        WesternSahara: "EH",
        Yemen: "YE",
        Zambia: "ZM",
        Zimbabwe: "ZW",
    },
};

export const onBoardingEnums = [
    { ...IndividualGenderEnum },
    { ...SkinToneEnum },
    { ...HairColorEnum },
    { ...EyeColorEnum },
    { ...BustSizeEnum },
    { ...DressSizeEnum },
    { ...ShoeSizeEnum },
    { ...HeightEnum },
    { ...WeightEnum },
    { ...HipSizeEnum },
    { ...WaistSizeEnum },
    { ...CountryEnum },
];

// ChatTypeEnum
export const ChatTypeEnum = {
    PRIVATE: "PRIVATE",
    GROUP: "GROUP",
};

// SubScriptionTopicsEnum
export const SubScriptionTopicsEnum = {
    ONLINE_STATUS: "ONLINE_STATUS",
    TYPING_STATUS: "TYPING_STATUS",
    CREATE_MESSAGE: "CREATE_MESSAGE",
    UPDATE_MESSAGE: "UPDATE_MESSAGE",
    DELETE_MESSAGE: "DELETE_MESSAGE",
    DELIVERED_MESSAGE: "DELIVERED_MESSAGE",
    SEEN_MESSAGE: "SEEN_MESSAGE",
};

// ClientEventsEnum
export const ClientEventsEnum = {
    MY_TYPING_STATUS: "MY_TYPING_STATUS",
    MY_SEEN_MESSAGE: "MY_SEEN_MESSAGE",
};
//************************************************************

export const initialJobPostFormValues = {
    title: "",
    jobCategory: "",
    requiredExperience: {
        minimum: "",
        maximum: "",
    },
    careerLevel: "",
    jobDuration: {
        minimum: 1,
        minimumPrefix: "",
        maximum: 2,
        maximumPrefix: "",
    },
    location: "",
    salary: "",
    description: "",
    requirements: "",
    educationLevel: "",
    tags: [],
};
